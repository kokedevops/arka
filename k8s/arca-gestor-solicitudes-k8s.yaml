apiVersion: v1
kind: Namespace
metadata:
  name: arka-namespace
  labels:
    name: arka-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arca-gestor-solicitudes
  namespace: arka-namespace
  labels:
    app: arca-gestor-solicitudes
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: arca-gestor-solicitudes
      version: v1
  template:
    metadata:
      labels:
        app: arca-gestor-solicitudes
        version: v1
    spec:
      containers:
      - name: arca-gestor-solicitudes
        image: arka/gestor-solicitudes:latest
        ports:
        - containerPort: 8082
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_CLOUD_KUBERNETES_ENABLED
          value: "true"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,refresh,env,kubernetes"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8082
          initialDelaySeconds: 20
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: arca-gestor-solicitudes-service
  namespace: arka-namespace
  labels:
    app: arca-gestor-solicitudes
spec:
  selector:
    app: arca-gestor-solicitudes
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: arca-gestor-solicitudes-config
  namespace: arka-namespace
data:
  application.yml: |
    server:
      port: 8082
    spring:
      application:
        name: arca-gestor-solicitudes
      cloud:
        kubernetes:
          discovery:
            enabled: true
            all-namespaces: false
        stream:
          bindings:
            envio-events:
              destination: envio-topic
              contentType: application/json
    resilience4j:
      circuitbreaker:
        instances:
          calculo-envio-service:
            registerHealthIndicator: true
            slidingWindowSize: 10
            minimumNumberOfCalls: 5
            failureRateThreshold: 50
    management:
      endpoints:
        web:
          exposure:
            include: health,info,refresh,kubernetes
---
apiVersion: v1
kind: Secret
metadata:
  name: arca-gestor-solicitudes-secrets
  namespace: arka-namespace
type: Opaque
data:
  # Base64 encoded secrets
  database-password: cGFzc3dvcmQ=  # password
  aws-access-key: YWNjZXNzLWtleQ==  # access-key
  aws-secret-key: c2VjcmV0LWtleQ==  # secret-key
