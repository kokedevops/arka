# üèóÔ∏è ARKA Config Server Dockerfile
# Multi-stage build para optimizar el tama√±o de la imagen

FROM openjdk:21-jdk-slim as builder

# Informaci√≥n del build
LABEL maintainer="ARKA Development Team"
LABEL description="Config Server for ARKA E-commerce Platform"
LABEL version="1.0.0"

# Variables de entorno
ENV JAVA_OPTS="-Xmx512m -Xms256m"
ENV SERVER_PORT=8888

# Directorio de trabajo
WORKDIR /app

# Copiar archivos de configuraci√≥n de Gradle
COPY build.gradle settings.gradle gradlew ./
COPY gradle gradle/

# Copiar c√≥digo fuente
COPY src src/

# Compilar la aplicaci√≥n
RUN chmod +x ./gradlew && ./gradlew clean bootJar --no-daemon

# Imagen final
FROM openjdk:21-jre-slim

# Informaci√≥n del contenedor
LABEL maintainer="ARKA Development Team"
LABEL description="ARKA Config Server - Centralized Configuration Management"

# Variables de entorno
ENV JAVA_OPTS="-Xmx512m -Xms256m"
ENV SERVER_PORT=8888
ENV EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/

# Crear usuario no-root
RUN addgroup --system spring && adduser --system spring --ingroup spring

# Directorio de trabajo
WORKDIR /app

# Copiar el JAR desde la etapa de build
COPY --from=builder /app/build/libs/*.jar app.jar

# Cambiar propietario
RUN chown spring:spring app.jar

# Usar usuario no-root
USER spring:spring

# Puerto expuesto
EXPOSE 8888

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8888/actuator/health || exit 1

# Comando de inicio
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
