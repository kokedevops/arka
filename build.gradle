plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

// Configuración común para todos los módulos
allprojects {
	group = 'com.arka'
	version = '0.0.1-SNAPSHOT'
	
	repositories {
		mavenCentral()
	}
}

// Configuración para submódulos
subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	
	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}
	
	dependencyManagement {
		imports {
			mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.1'
		}
	}
	
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.cloud:spring-cloud-starter-config'
		implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
		
		// Spring Security dependencies para todos los módulos
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.security:spring-security-oauth2-resource-server'
		implementation 'org.springframework.security:spring-security-oauth2-jose'
		implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
		implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
		implementation 'org.springframework.security:spring-security-crypto'
		
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}
	
	tasks.named('test') {
		useJUnitPlatform()
	}
}

// Configuración específica del módulo principal
group = 'com.arka'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.1'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testRuntimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
