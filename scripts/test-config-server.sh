#!/bin/bash

echo "=========================================="
echo "PROBANDO CONEXI√ìN CON CONFIG SERVER"
echo "=========================================="
echo ""

# Config Server details
CONFIG_SERVER_URL="http://127.0.0.1:9090"
CONFIG_USER="config-client"
CONFIG_PASS="arka-client-2025"

# Function to test configuration endpoint
test_config() {
    local service_name="$1"
    local service_port="$2"
    local config_endpoint="$3"
    
    echo "üîç Verificando configuraci√≥n de $service_name:"
    
    # Try to get configuration
    local response=$(curl -s -u "$CONFIG_USER:$CONFIG_PASS" "$config_endpoint" 2>/dev/null)
    
    if [[ $? -eq 0 && -n "$response" ]]; then
        echo "‚úÖ Configuraci√≥n obtenida exitosamente"
        echo "$response" | jq . 2>/dev/null || echo "$response"
    else
        echo "‚ùå Error obteniendo configuraci√≥n"
        echo "   Endpoint: $config_endpoint"
        
        # Try to check if service is running
        if curl -s "http://localhost:$service_port/actuator/health" > /dev/null 2>&1; then
            echo "   ‚ÑπÔ∏è  Servicio est√° corriendo en puerto $service_port"
        else
            echo "   ‚ö†Ô∏è  Servicio no est√° disponible en puerto $service_port"
        fi
    fi
    echo ""
    echo ""
}

echo "üöÄ Probando conexi√≥n con el Config Server..."
echo ""

# First, check if Config Server is running
echo "üîç Verificando disponibilidad del Config Server..."
if curl -s "$CONFIG_SERVER_URL/actuator/health" > /dev/null 2>&1; then
    echo "‚úÖ Config Server est√° disponible en $CONFIG_SERVER_URL"
else
    echo "‚ùå Config Server no est√° disponible en $CONFIG_SERVER_URL"
    echo ""
    echo "üìã Para resolver este problema:"
    echo "1. Aseg√∫rate de que el Config Server est√© corriendo"
    echo "2. Verifica que est√© en el puerto 9090"
    echo "3. Verifica conectividad de red"
    echo ""
    read -p "¬øContinuar con las pruebas de todos modos? (y/N): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Cancelando pruebas..."
        exit 1
    fi
fi
echo ""

# Test each service configuration
test_config "eureka-server" "8761" "$CONFIG_SERVER_URL/eureka-server/dev"
test_config "api-gateway" "8080" "$CONFIG_SERVER_URL/api-gateway/dev"
test_config "arca-cotizador" "8081" "$CONFIG_SERVER_URL/arca-cotizador/dev"
test_config "arca-gestor-solicitudes" "8082" "$CONFIG_SERVER_URL/arca-gestor-solicitudes/dev"
test_config "hello-world-service" "8083" "$CONFIG_SERVER_URL/hello-world-service/dev"

echo "=========================================="
echo "üéâ PRUEBAS COMPLETADAS!"
echo "=========================================="
echo ""
echo "üìã Resumen:"
echo "Si viste las configuraciones JSON arriba, la conexi√≥n es exitosa."
echo ""
echo "üîß Si hay errores, revisa:"
echo "1. üåê Conectividad a internet"
echo "2. üîë Credenciales del Config Server (config-client:arka-client-2025)"
echo "3. üèÉ Que el Config Server est√© ejecut√°ndose en puerto 9090"
echo "4. üîó URLs de configuraci√≥n correctas"
echo ""
echo "üõ†Ô∏è  Comandos √∫tiles para debugging:"
echo ""
echo "# Verificar Config Server:"
echo "curl $CONFIG_SERVER_URL/actuator/health"
echo ""
echo "# Verificar configuraciones manualmente:"
echo "curl -u $CONFIG_USER:$CONFIG_PASS $CONFIG_SERVER_URL/arca-cotizador/dev | jq ."
echo ""
echo "# Refrescar configuraci√≥n en un servicio:"
echo "curl -X POST http://localhost:8081/actuator/refresh"
echo ""
echo "# Verificar propiedades activas en un servicio:"
echo "curl http://localhost:8081/actuator/configprops | jq ."
