# üèóÔ∏è WildFly Configuration for ARKA Microservices
# Configuraci√≥n automatizada para despliegue de microservicios Spring Boot

# =============================================================================
# DATASOURCES CONFIGURATION
# =============================================================================

# MySQL Datasource para producci√≥n (AWS RDS)
/subsystem=datasources/data-source=ArkaDS:add(\
    jndi-name=java:jboss/datasources/ArkaDS,\
    driver-name=mysql,\
    connection-url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:arka_db}?useSSL=true&requireSSL=false&serverTimezone=UTC,\
    user-name=${DB_USERNAME:arka_user},\
    password=${DB_PASSWORD:arka_pass},\
    min-pool-size=5,\
    max-pool-size=20,\
    pool-prefill=true,\
    transaction-isolation=TRANSACTION_READ_COMMITTED,\
    enabled=true)

# H2 Datasource para desarrollo y testing
/subsystem=datasources/data-source=ArkaTestDS:add(\
    jndi-name=java:jboss/datasources/ArkaTestDS,\
    driver-name=h2,\
    connection-url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE,\
    user-name=sa,\
    password=,\
    min-pool-size=1,\
    max-pool-size=5,\
    enabled=true)

# =============================================================================
# LOGGING CONFIGURATION  
# =============================================================================

# Logger para ARKA aplicaciones
/subsystem=logging/logger=com.arka:add(level=${ARKA_LOG_LEVEL:INFO})

# Logger para Spring Framework
/subsystem=logging/logger=org.springframework:add(level=${SPRING_LOG_LEVEL:WARN})

# Logger para Eureka Client
/subsystem=logging/logger=com.netflix.eureka:add(level=${EUREKA_LOG_LEVEL:WARN})

# =============================================================================
# SYSTEM PROPERTIES PARA MICROSERVICIOS
# =============================================================================

# Spring Profiles
/system-property=spring.profiles.active:add(value=${SPRING_PROFILES_ACTIVE:wildfly,aws})

# Eureka Configuration
/system-property=eureka.client.service-url.defaultZone:add(value=${EUREKA_URL:http://localhost:8761/eureka})
/system-property=eureka.instance.hostname:add(value=${EUREKA_INSTANCE_HOSTNAME:localhost})
/system-property=eureka.instance.non-secure-port:add(value=${EUREKA_INSTANCE_PORT:8080})

# Config Server
/system-property=spring.config.import:add(value=optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888})

# Database Configuration
/system-property=spring.datasource.url:add(value=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:arka_db})
/system-property=spring.datasource.username:add(value=${DB_USERNAME:arka_user})
/system-property=spring.datasource.password:add(value=${DB_PASSWORD:arka_pass})

# JWT Configuration
/system-property=jwt.secret:add(value=${JWT_SECRET:mySecretKey})
/system-property=jwt.expiration:add(value=${JWT_EXPIRATION:3600})

# =============================================================================
# UNDERTOW CONFIGURATION PARA SPRING BOOT
# =============================================================================

# Configurar Undertow para soportar Spring Boot
/subsystem=undertow/server=default-server/host=default-host/setting=http-invoker:add()

# Aumentar l√≠mites para aplicaciones Spring Boot
/subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=max-post-size,value=104857600)

# =============================================================================
# SECURITY DOMAINS (opcional para futuras integraciones)
# =============================================================================

# Security domain para ARKA aplicaciones
/subsystem=security/security-domain=arka-security:add()
/subsystem=security/security-domain=arka-security/authentication=classic:add(\
    login-modules=[\
        {\
            code=UsersRoles,\
            flag=required,\
            module-options={\
                usersProperties=users.properties,\
                rolesProperties=roles.properties\
            }\
        }\
    ]\
)

:reload